name: cd-prod-with-docker

on:
  push:
    branches: [ "dummy" ]

jobs:
  build-gradle:
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # https://github.com/actions/setup-java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # https://github.com/gradle/gradle-build-action
      - name: gradle 빌드하기
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      # https://github.com/docker/setup-qemu-action
      - name: docker 애뮬레이터(== VM, 하이퍼바이저) 설정
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: docker Buildx 설정 (멀티 플랫폼 빌드)
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      - name: docker hub에 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # https://github.com/docker/build-push-action
      - name: docker 빌드하고 푸시까지
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ secrets.DOCKER_TAG }}
          platforms: linux/arm64

      # https://github.com/appleboy/ssh-action
      - name: EC2에 배포하기
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_HOST }}
          port: ${{ secrets.EC2_INSTANCE_PORT }}
          username: ${{ secrets.EC2_INSTANCE_USERNAME }}
          key: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
          script: |
