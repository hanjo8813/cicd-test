# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: ci

on:
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # https://github.com/gradle/gradle-build-action
      - name: gradle 빌드하기
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          # 기본적으로 캐싱은 활성화되어 있음 (안건드려도 됨)
#          cache-read-only: true
#          cache-write-only: true

      # https://github.com/actions/upload-artifact
      - name: gradle 빌드 결과물을 아티팩트 스토리지에 업로드
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: gradle-build-result
          path: build

      - name: 빌드 결과 slack 알람 보내기
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL_CICD }}

  test-result-comment:
    runs-on: ubuntu-latest
    needs: [ build-gradle ]
    steps:
      - run: ls

      - name: gradle 빌드 결과물 다운로드
        uses: actions/download-artifact@v2
        with:
          name: gradle-build-result
          path: build

      - run: ls

      # https://github.com/EnricoMi/publish-unit-test-result-action
      - name: 테스트 결과를 PR 코멘트에 자동 작성
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()  # 실패 여부 상관없이 항상 실행~
        with:
          files: '/build/test-results/test/TEST-*.xml'

      # https://github.com/mikepenz/action-junit-report
      - name: 테스트 코드 중 테스트 실패한 부분에 PR 코멘트 자동 작성
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          token: ${{ github.token }}
          report_paths: '/build/test-results/test/TEST-*.xml'
